{"version":3,"sources":["components/Lesson-6/PokemonForm/PokemonForm.jsx","components/Lesson-6/PokemonApi/PokemonApi.jsx","components/Lesson-6/PokemonInfo/PokemonInfo.jsx","components/Lesson-6/App.jsx","index.js"],"names":["PokemonForm","state","pokemonName","handleInputPokemonName","e","setState","currentTarget","value","handleChangeName","preventDefault","props","onChange","this","action","onSubmit","type","name","Component","api","fetchPokemon","newName","fetch","console","log","PokemonApi","PokemonInfo","pokemon","error","status","prevProps","prevState","prevName","then","response","ok","json","Promise","reject","Error","catch","message","src","sprites","other","front_default","width","alt","App","handleFormSubmit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAsCeA,E,4MAlCbC,MAAQ,CACNC,YAAa,I,EAEfC,uBAAyB,SAAAC,GACvB,EAAKC,SAAS,CAAEH,YAAaE,EAAEE,cAAcC,S,EAG/CC,iBAAmB,SAAAJ,GACjBA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,aAC/B,EAAKG,SAAS,CAAEH,YAAa,M,uDAGrB,IACAA,EAAgBU,KAAKX,MAArBC,YACR,OACE,uBAAMW,OAAO,GAAGC,SAAUF,KAAKJ,iBAA/B,UACE,uBACEO,KAAK,OAELC,KAAK,UACLL,SAAUC,KAAKT,uBACfI,MAAOL,IAGT,yBAAQa,KAAK,SAAb,UACG,IACD,cAAC,IAAD,IAFF,UAEsB,c,GA5BJE,aCC1B,IACeC,EADH,CAAEC,aAJd,SAAsBC,GAEpB,OAAOC,MAAM,GAAD,OADK,sCACL,OAAeD,MCA7BE,QAAQC,IAAI,aAAcC,G,IAELC,E,4MACnBxB,MAAQ,CACNyB,QAAS,KAETC,MAAO,KACPC,OAAQ,Q,iEAESC,EAAWC,GAAY,IAAD,OACjCC,EAAWF,EAAUJ,YACrBL,EAAUR,KAAKF,MAAMe,YACvBM,IAAaX,IAEfR,KAAKP,SAAS,CAAEuB,OAAQ,UAAWF,QAAS,KAQ5CF,EAAWL,aAAaC,GACrBY,MAAK,SAAAC,GAAQ,OACZA,EAASC,GACLD,EAASE,OACTC,QAAQC,OACN,IAAIC,MAAJ,oFACmBlB,EADnB,sHACmD,EAAKV,MAAMe,YAD9D,4IAKPO,MAAK,SAAAN,GAAO,OAAI,EAAKrB,SAAS,CAAEqB,UAASE,OAAQ,gBACjDW,OAAM,SAAAZ,GAAK,OAAI,EAAKtB,SAAS,CAAEsB,QAAOC,OAAQ,mB,+BAK3C,IAAD,EAMHhB,KAAKX,MAJPyB,EAFK,EAELA,QAEAC,EAJK,EAILA,MACAC,EALK,EAKLA,OAkBF,MAAe,SAAXA,EAEA,mCACE,iJAIS,YAAXA,EACK,yFAEM,aAAXA,EACK,4BAAID,EAAMa,UAEJ,aAAXZ,EAEA,gCACE,kCAAKF,EAAQV,QACb,qBACEyB,IAAKf,EAAQgB,QAAQC,MAAM,oBAAoBC,cAC/CC,MAAM,MACNC,IAAKpB,EAAQV,eAPrB,M,GAxEqCC,aCGpB8B,E,4MACnB9C,MAAQ,CAAEyB,QAAS,I,EAEnBsB,iBAAmB,SAAA9C,GACjBoB,QAAQC,IAAI,cAAerB,GAK3B,EAAKG,SAAS,CAAEqB,QAASxB,K,uDAGjB,IACAwB,EAAYd,KAAKX,MAAjByB,QAER,OADAJ,QAAQC,IAAI,iBAAeG,GAEzB,qCACE,cAAC,EAAD,CAAaf,SAAUC,KAAKoC,mBAC5B,cAAC,EAAD,CAAavB,YAAaC,IAC1B,cAAC,IAAD,W,GAnByBT,a,MCAjCgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.631ff593.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { ImSearch } from 'react-icons/im';\n\nclass PokemonForm extends Component {\n  state = {\n    pokemonName: '',\n  };\n  handleInputPokemonName = e => {\n    this.setState({ pokemonName: e.currentTarget.value });\n  };\n\n  handleChangeName = e => {\n    e.preventDefault();\n    this.props.onChange(this.state.pokemonName);\n    this.setState({ pokemonName: '' });\n  };\n\n  render() {\n    const { pokemonName } = this.state;\n    return (\n      <form action=\"\" onSubmit={this.handleChangeName}>\n        <input\n          type=\"text\"\n          // className={ }\n          name=\"pokemon\"\n          onChange={this.handleInputPokemonName}\n          value={pokemonName}\n          // id=\"\"\n        />\n        <button type=\"submit\">\n          {' '}\n          <ImSearch /> Search{' '}\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default PokemonForm;\n","function fetchPokemon(newName) {\n  const URL_ADDR = 'https://pokeapi.co/api/v2/pokemon/';\n  return fetch(`${URL_ADDR}${newName}`);\n}\nconst api = { fetchPokemon };\nexport default api;\n\n// const URL_ADDR = 'https://pokeapi.co/api/v2/pokemon/';\n// const fetchPokemon = (newName) => fetch(`${URL_ADDR}${newName}`);\n// export default fetchPokemon\n","import { Component } from 'react';\nimport PokemonApi from '../PokemonApi';\nconsole.log('PokemonApi', PokemonApi);\n\nexport default class PokemonInfo extends Component {\n  state = {\n    pokemon: null,\n    ////  loading: false,\n    error: null,\n    status: 'idle',\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.PokemonInfo;\n    const newName = this.props.PokemonInfo;\n    if (prevName !== newName) {\n      //  this.setState({ loading: true , pokemon:''})\n      this.setState({ status: 'pending', pokemon: '' });\n      ////  setTimeout(() => {\n      ////  /* fetch(`${URL_ADDR}${newName}`)\n      //      .then(response => response.ok?  response.json(): Promise.reject(new Error(`ошибка поиска ${newName}` )))\n      //      .then(pokemon => this.setState({ pokemon }))\n      //      .catch(error => this.setState({error}))\n      //      .finally(() => this.setState({ loading: false })) */\n      //  PokemonApi(newName)\n      PokemonApi.fetchPokemon(newName)\n        .then(response =>\n          response.ok\n            ? response.json()\n            : Promise.reject(\n                new Error(\n                  `ошибка поиска ${newName}. Все пропало покемон ${this.props.PokemonInfo} ушел гулять и не вернется`,\n                ),\n              ),\n        )\n        .then(pokemon => this.setState({ pokemon, status: 'resolved' }))\n        .catch(error => this.setState({ error, status: 'rejected' }));\n      /* //  //finally(() => this.setState({ loading: false })) */\n      ////  }, 500)\n    }\n  }\n  render() {\n    const {\n      pokemon,\n      ////  loading,\n      error,\n      status,\n    } = this.state;\n    ////  const { PokemonInfo } = this.props;\n    //// return (\n    ////    <>\n    ////     <h1>PokemonInfo</h1>\n    ////         {loading&&<div>loading..</div>}\n    ////          {!PokemonInfo && <h2>введите имя покемона</h2>}\n    ////          {/* {error && <h2>все пропало покемон \"{PokemonInfo}\" ушел гулять и не вернется</h2>} */}\n    ////          {error && <h2>{error.message}</h2>}\n    ////          { pokemon && (\n    ////              <div>\n    ////              <p> {pokemon.name}</p>\n    ////                  <img src={pokemon.sprites.other.['official-artwork'].front_default} width=\"300\"  alt={pokemon.name} />\n    ////              </div>\n    ////          )}\n    ////      </>\n    ////   );\n    if (status === 'idle') {\n      return (\n        <>\n          <p>введите имя покемона</p>\n        </>\n      );\n    }\n    if (status === 'pending') {\n      return <p>Заргужаем..</p>;\n    }\n    if (status === 'rejected') {\n      return <p>{error.message}</p>;\n    }\n    if (status === 'resolved') {\n      return (\n        <div>\n          <p> {pokemon.name}</p>\n          <img\n            src={pokemon.sprites.other['official-artwork'].front_default}\n            width=\"300\"\n            alt={pokemon.name}\n          />\n        </div>\n      );\n    }\n  }\n}\n","import { Component } from 'react';\n// import { ReactComponent as myIcon} from './{файл с иконкамию.svg}'\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport PokemonForm from './PokemonForm';\nimport PokemonInfo from './PokemonInfo';\n\nexport default class App extends Component {\n  state = { pokemon: '' };\n\n  handleFormSubmit = pokemonName => {\n    console.log('pokemonName', pokemonName);\n    // if (pokemonName === '') {\n    //      return toast.warning ('введите имя покемона.')\n    //     ;\n    // }\n    this.setState({ pokemon: pokemonName });\n  };\n\n  render() {\n    const { pokemon } = this.state;\n    console.log('pokemon--->', pokemon);\n    return (\n      <>\n        <PokemonForm onChange={this.handleFormSubmit} />\n        <PokemonInfo PokemonInfo={pokemon} />\n        <ToastContainer />\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n// import App from './components/Lesson-3-5/App';\nimport App from './components/Lesson-6/App';\nimport './index.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}