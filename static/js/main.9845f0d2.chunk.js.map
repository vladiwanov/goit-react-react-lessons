{"version":3,"sources":["components/Lesson-3-4/TodoList/TodoList.module.css","components/Lesson-3-4/Counter/Controls.js","components/Lesson-3-4/Counter/Value.js","components/Lesson-3-4/Counter/Counter.js","components/Lesson-3-4/ColorPicker/ColorPicker.jsx","components/Lesson-3-4/TodoList/TodoList.jsx","components/Lesson-3-4/TodoList/TodoEditor/TodoEditor.jsx","components/Lesson-3-4/TodoList/Filter/Filter.jsx","components/Lesson-3-4/Form/Form.jsx","components/Lesson-3-4/App.jsx","index.js","components/Lesson-3-4/Form/Form.module.css","components/Lesson-3-4/Counter/Counter.module.css","components/Lesson-3-4/ColorPicker/ColorPicker.module.css"],"names":["module","exports","Controls","onIncrement","onDecrement","className","s","control","type","onClick","Value","value","Counter","state","handleIncrement","setState","prevState","handleDecrement","this","counter","Component","defaultProps","initialValue","ColorPicker","activeOptionIdx","activeColor","props","label","changeState","index","options","active","console","log","container","title","map","color","classNames","option","style","backgroundColor","TodoList","todos","onDeleteTodo","onToggleCompleted","id","text","completed","checked","onChange","TodoEditor","handleChange","e","message","currentTarget","handleSubmit","preventDefault","onSubmit","Filter","Form","name","tag","experience","licence","nameInputId","shortid","generate","tagInputId","handLicenseChange","resetForm","main","htmlFor","input","radio","checkbox","button","disabled","App","todosArray","inputValue","filter","onSubmitHandler","data","handleInputChange","event","toggleCompleted","todoId","todo","addTodo","deleteTodo","changeFilter","getVisibleTodos","normalizedFilter","toLowerCase","includes","getCompletedTodoCount","reduce","total","completedTodosVar","colorPickerOptions","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9845f0d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList\":\"TodoList_TodoList__8ZGLi\",\"TodoList__item\":\"TodoList_TodoList__item__1lDdd\",\"TodoList__text\":\"TodoList_TodoList__text__3cc_K\"};","import React from 'react';\nimport s from './Counter.module.css';\n\nconst Controls = ({ onIncrement, onDecrement }) => {\n  return (\n    <div className={s.control}>\n      <button type=\"button\" onClick={onDecrement}>\n        уменьшить на 1\n      </button>\n      <button type=\"button\" onClick={onIncrement}>\n        увеличить на 1\n      </button>\n    </div>\n  );\n};\nexport default Controls;\n","import React from 'react';\nimport s from './Counter.module.css';\nconst Value = ({ value }) => {\n  return <span className={s.value}>{value}</span>;\n};\nexport default Value;\n","import React, { Component, Fragment } from 'react';\n// import PropTypes from 'prop-types';\nimport s from './Counter.module.css';\nimport Controls from './Controls';\nimport Value from './Value';\n\nclass Counter extends Component {\n  /* //// constructor() {\n  //   super();\n  //   this.state = {\n  //     value: 0,\n  //   };\n  // } */\n  static defaultProps = {\n    initialValue: 0,\n  };\n  // static propTypes = {};\n  // state = { value: 5 }; //? публичное свойство обязательно называется state, обязательно содержит объект\n  //? от него зависит разметка - это текущее состояние того , что рендерится (данные для рендеринга) и меняется методами данного класса.\n\n  state = {\n    // value: this.props.initialValue,\n    value: 0,\n  };\n  // handleIncrement = event => {\n  //   console.log('кликнули увеличить');\n  //   console.log(this);\n\n  //   setTimeout(() => {\n  //     console.log(event.target);\n  //   }, 2000);\n\n  // const target = event.target;\n  //   const { target } = event;\n\n  //   setTimeout(() => {\n  //     console.log(target);\n  //   }, 1000);\n  // };\n  // handleDecrement = event => {\n  //   console.log('кликнули уменьшить');\n  //   console.log(this);\n  //   console.log(event);\n  // };\n\n  ///!  ❌ никогда нельзя делать:\n  //..//this.state.value = 5 !!!!!\n  //' надо делать так  если не основываться на предыдущем\n  //' результате(передается объект):\n  //' this.setState({ value: 10 });\n  // };\n\n  // 'если основываться на предыдущем результате (передается функция):\n  //' this.setState(prevState => ({ value: prevState.value + 1 })); ✅'\n\n  handleIncrement = () => {\n    this.setState(prevState => ({ value: prevState.value + 1 }));\n    // console.log('counter state:', this.state.value);\n    // console.log(this.props.defaultProps.initialValue);\n  };\n\n  handleDecrement = () => {\n    this.setState(prevState => ({ value: prevState.value - 1 }));\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <Fragment>\n        <div className={s.counter}>\n          <h2>Состояние компонента</h2>\n          {/* ////<span className={s.value}>{this.state.value}</span> */}\n          <Value value={value} />\n          {/* ////<div className={s.control}>\n      ////    <button type=\"button\" onClick={this.handleDecrement}>\n      ////      уменьшить на 1\n      ////    </button>\n      ////    <button type=\"button\" onClick={this.handleIncrement}>\n      ////      увеличить на 1\n      ////    </button>\n      ////  </div> */}\n          <Controls\n            onIncrement={this.handleIncrement}\n            onDecrement={this.handleDecrement}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\nexport default Counter;\n","import React, { Component } from 'react';\nimport s from './ColorPicker.module.css';\nimport classNames from 'classnames'; // для css модуля : https://github.com/JedWatson/classnames#alternate-bind-version-for-css-modules\n// в данном примере  сделано через вычисляемые свойства объекта\nclass ColorPicker extends Component {\n  state = {\n    activeOptionIdx: 0,\n    activeColor: this.props.label,\n  };\n\n  // changeState(index){ //' возможен такой  вариант:\n  changeState = (\n    index,\n    //// label\n  ) => {\n    this.setState({\n      activeOptionIdx: index,\n      //// activeColor: label,\n    });\n  };\n\n  // makeClassNameOptions = index => {\n  //   //// classNames('{s.option}', {\n  //   ////   '{s.active}': index === this.state.activeOptionIdx,\n  //   //// });\n\n  //   const optionClasses = [s.option];\n  //   if (index === this.state.activeOptionIdx) {\n  //     optionClasses.push(s.active);\n  //   }\n  //   return optionClasses;\n  //   return classNames;\n  // };\n\n  render() {\n    const { activeOptionIdx } = this.state;\n    const { options } = this.props;\n    const { label } = options[activeOptionIdx];\n    const activeClassName = `${s.active}`;\n    console.log('lable', { label });\n    return (\n      <div className={s.container}>\n        <h2 className={s.title}>Color Picker</h2>\n        {/* ////<p> Выбран цвет: {this.state.activeColor}</p> */}\n        <p> Выбран цвет: {label}</p>\n        <div>\n          {options.map(({ label, color }, index) => (\n            <button\n              key={label}\n              className={classNames(`${s.option}`, {\n                [`${s.active}`]: index === this.state.activeOptionIdx,\n              })}\n              // className={this.makeClassNameOptions(index).join(' ')}\n              style={{ backgroundColor: color }}\n              onClick={() => {\n                this.changeState(index, label);\n              }}\n            ></button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ColorPicker;\n","import React from 'react';\nimport './TodoList.module.css';\nimport './TodoList.css';\nimport classNames from 'classnames';\n\n// const TodoList = ({ todos, onDeleteTodo, onToggleCompleted}) => (\n//   <ul className=\"TodoList\">\n//     {todos.map(({ id, text,completed }) => (\n//       <li key={id} className={classNames(\"TodoList__item\", {\n//         'TodoList__item--completed':completed,\n//       })}>\n//         <input\n//           type=\"checkbox\"\n//           className=\"TodoList__checkbox\"\n//           checked={completed}\n//           onChange={onToggleCompleted}\n//         />\n//         <p className=\"TodoList__text\">{text}</p>\n//         <button\n//           type=\"button\"\n//           className=\"TodoList__btn\"\n//           onClick={() => onDeleteTodo(id)}\n//         >\n//           Удалить\n//         </button>\n//       </li>\n//     ))}\n//   </ul>\n// );\n\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => (\n  <ul className=\"TodoList\">\n    {todos.map(({ id, text, completed }) => (\n      <li\n        key={id}\n        className={classNames('TodoList__item', {\n          'TodoList__item--completed': completed,\n        })}\n      >\n        <input\n          type=\"checkbox\"\n          className=\"TodoList__checkbox\"\n          checked={completed}\n          onChange={() => onToggleCompleted(id)}\n        />\n        <p className=\"TodoList__text\">{text}</p>\n        <button\n          type=\"button\"\n          className=\"TodoList__btn\"\n          onClick={() => onDeleteTodo(id)}\n        >\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\nexport default TodoList;\n","import React, { Component } from 'react';\n// import s from './TodoEditor.module.css';\nimport './TodoEditor.scss';\n\nclass TodoEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n    };\n  }\n  handleChange = e => {\n    this.setState({ message: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.onSubmit(this.state.message);\n    this.setState({ message: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\n        <textarea\n          className=\"TodoEditor__textarea\"\n          value={this.state.message}\n          onChange={this.handleChange}\n        ></textarea>\n        <button type=\"submit\" className=\"TodoEditor__button\">\n          to Save\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default TodoEditor;\n","const Filter = ({ value, onChange }) => {\n  return (\n    <label\n    // htmlFor=\"\"\n    >\n      фильтрт по имени\n      <input\n        // type=\"text\"/\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\nexport default Filter;\n","import React, { Component } from 'react';\nimport s from './Form.module.css';\nimport shortid from 'shortid'; //https://www.npmjs.com/package/shortid\n\nclass Form extends Component {\n  //  { onSubmitHandler } = onSubmit;\n\n  state = {\n    name: '',\n    tag: '',\n    experience: 'junior',\n    licence: false,\n  };\n\n  nameInputId = shortid.generate();\n  tagInputId = shortid.generate();\n\n  handLicenseChange = e => {\n    console.log(e.currentTarget.checked);\n    this.setState({ licence: e.currentTarget.checked });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n  resetForm = () => {\n    this.setState({ name: '', tag: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.main} onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Firstname:\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label htmlFor={this.tagInputId}>\n          Lastname:\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"tag\"\n            value={this.state.tag}\n            onChange={this.handleChange}\n            id={this.tagInputId}\n          />\n        </label>\n        <p>Development Level: </p>\n        <input\n          className={s.radio}\n          type=\"radio\"\n          name=\"experience\"\n          value=\"junior\"\n          checked={this.state.experience === 'junior'}\n          onChange={this.handleChange}\n        />{' '}\n        junior\n        <input\n          className={s.radio}\n          type=\"radio\"\n          name=\"experience\"\n          value=\"middle\"\n          checked={this.state.experience === 'middle'}\n          onChange={this.handleChange}\n        />{' '}\n        Middle\n        <input\n          className={s.radio}\n          type=\"radio\"\n          name=\"experience\"\n          value=\"senior\"\n          checked={this.state.experience === 'senior'}\n          onChange={this.handleChange}\n        />{' '}\n        Senior\n        <label>\n          <input\n            className={s.checkbox}\n            type=\"checkbox\"\n            name=\"licence\"\n            checked={this.state.licence}\n            onChange={this.handLicenseChange}\n          />{' '}\n          Agree with Conditionals (Submit button appears after \"checked\")\n        </label>\n        <button\n          className={s.button}\n          type=\"submit\"\n          disabled={!this.state.licence}\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\nexport default Form;\n","// ----BEGIN-----------\nimport { Component } from 'react';\nimport Counter from './Counter/Counter';\nimport ColorPicker from './ColorPicker';\nimport colorPickerOptions from '../Lesson-3-4/ColorPicker/colorPickerOptions/colorPickerOptions.json';\nimport TodoList from './TodoList';\nimport todosArray from './TodoList/todos.json';\nimport TodoEditor from './TodoList/TodoEditor/TodoEditor';\nimport shortid from 'shortid';\nimport Filter from './TodoList/Filter/Filter';\n// import Container from './Container'\nimport Form from './Form';\n// import s from './App.module.css'\n\nclass App extends Component {\n  //| --------------CONSTRUCTOR------------------\n  state = {\n    todos: todosArray,\n    inputValue: '',\n    filter: '',\n  };\n\n  //| --------------METODS------------------\n\n  // .form metods-complect:\n  onSubmitHandler = data => {\n    console.log(data);\n  };\n\n  // TODO metods-complect:\n  handleInputChange = event => {\n    console.log(event.currentTarget.value);\n\n    this.setState({ inputValue: event.currentTarget.value });\n    console.log(this.state.inputValue);\n\n    this.setState = { inputValue: 'AAAAA' };\n    console.log(this.state.inputValue);\n  };\n\n  // toggleCompleted = todoId => {\n  //   console.log(todoId);\n  //   this.setState(prevState => ({\n  //     todos: prevState.todos.map(todo => {\n  //       if (todo.id === todoId) {\n  //         return {\n  //           ...todo,\n  //         completed:todo.completed,}\n  //       }\n  //       return todo\n  //     }),\n  //   }))\n  // }\n\n  //. аналогичная запись:\n  toggleCompleted = todoId => {\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { todos, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  getCompletedTodoCount = () => {\n    const { todos } = this.state;\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n  };\n\n  //| --------------RENDER------------------\n\n  render() {\n    const { todos, filter, inputValue } = this.state;\n    const visibleTodos = this.getVisibleTodos();\n    // const completedTodosCount = todos.filter(todo => todo.completed);\n    const completedTodosVar = this.getCompletedTodoCount();\n    // console.log(completedTodosCount.length);\n    // console.log(completedTodosVar);\n\n    return (\n      <>\n        <Form onSubmit={this.onSubmitHandler} />\n        <Form onSubmit={this.onSubmitHandler} />\n        <Counter initialValue=\"\" />\n        <ColorPicker options={colorPickerOptions} />\n        <div>\n          <p>Общее количество:{todos.length}</p>\n          <p>количество выполненных:{completedTodosVar}</p>\n          <TodoEditor onSubmit={this.addTodo} />\n          <Filter value={filter} onChange={this.changeFilter} />\n\n          <TodoList\n            todos={this.getVisibleTodos()}\n            // todos={visibleTodos}\n            onDeleteTodo={this.deleteTodo}\n            onToggleCompleted={this.toggleCompleted}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './components/Lesson-3-4/App';\nimport './index.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Form_main__1sDv6\",\"input\":\"Form_input__1cCZ1\",\"button\":\"Form_button__3JmMU\",\"radio\":\"Form_radio__pbvrM\",\"checkbox\":\"Form_checkbox__1YSAH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__162WH\",\"value\":\"Counter_value__GOvD5\",\"control\":\"Counter_control__1HJoj\",\"global\":\"Counter_global__uDVKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ColorPicker_box__3kkNh\",\"big\":\"ColorPicker_big__24MvQ\",\"red\":\"ColorPicker_red__3sJQW\",\"container\":\"ColorPicker_container__8LJrF\",\"title\":\"ColorPicker_title__3YpTL\",\"option\":\"ColorPicker_option__2emXu\",\"active\":\"ColorPicker_active__347-t\"};"],"sourceRoot":""}