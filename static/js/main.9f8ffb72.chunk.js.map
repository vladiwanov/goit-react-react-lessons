{"version":3,"sources":["components/Lesson-3-6/TodoList/TodoList.module.css","components/Lesson-3-6/TodoList/TodoList.jsx","components/Lesson-3-6/TodoList/TodoEditor/TodoEditor.jsx","components/Lesson-3-6/TodoList/Filter/Filter.jsx","components/Lesson-3-6/Modal/Modal.js","components/Lesson-3-6/App.jsx","index.js"],"names":["module","exports","TodoList","todos","onDeleteTodo","onToggleCompleted","className","map","id","text","completed","classNames","type","checked","onChange","onClick","TodoEditor","props","handleChange","e","setState","message","currentTarget","value","handleSubmit","preventDefault","console","log","state","onSubmit","this","Component","Filter","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","todosArray","inputValue","filter","showModal","handleInputChange","event","toggleCompleted","todoId","todo","addTodo","shortid","generate","deleteTodo","prevState","changeFilter","getVisibleTodos","normalizedFilter","toLowerCase","includes","getCompletedTodoCount","reduce","total","toggleModal","parsedTodos","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","completedTodosVar","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f8ffb72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList\":\"TodoList_TodoList__1PRND\",\"TodoList__item\":\"TodoList_TodoList__item__3_YvZ\",\"TodoList__text\":\"TodoList_TodoList__text__16t_D\"};","import React from 'react';\nimport './TodoList.module.css';\nimport './TodoList.css';\nimport classNames from 'classnames';\n\n// const TodoList = ({ todos, onDeleteTodo, onToggleCompleted}) => (\n//   <ul className=\"TodoList\">\n//     {todos.map(({ id, text,completed }) => (\n//       <li key={id} className={classNames(\"TodoList__item\", {\n//         'TodoList__item--completed':completed,\n//       })}>\n//         <input\n//           type=\"checkbox\"\n//           className=\"TodoList__checkbox\"\n//           checked={completed}\n//           onChange={onToggleCompleted}\n//         />\n//         <p className=\"TodoList__text\">{text}</p>\n//         <button\n//           type=\"button\"\n//           className=\"TodoList__btn\"\n//           onClick={() => onDeleteTodo(id)}\n//         >\n//           Удалить\n//         </button>\n//       </li>\n//     ))}\n//   </ul>\n// );\n\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => (\n  <ul className=\"TodoList\">\n    {todos.map(({ id, text, completed }) => (\n      <li\n        key={id}\n        className={classNames('TodoList__item', {\n          'TodoList__item--completed': completed,\n        })}\n      >\n        <input\n          type=\"checkbox\"\n          className=\"TodoList__checkbox\"\n          checked={completed}\n          onChange={() => onToggleCompleted(id)}\n        />\n        <p className=\"TodoList__text\">{text}</p>\n        <button\n          type=\"button\"\n          className=\"TodoList__btn\"\n          onClick={() => onDeleteTodo(id)}\n        >\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\nexport default TodoList;\n","import React, { Component } from 'react';\n// import s from './TodoEditor.module.css';\nimport './TodoEditor.scss';\n\nclass TodoEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n    };\n  }\n  handleChange = e => {\n    this.setState({ message: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.onSubmit(this.state.message);\n    this.setState({ message: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\n        <textarea\n          className=\"TodoEditor__textarea\"\n          value={this.state.message}\n          onChange={this.handleChange}\n        ></textarea>\n        <button type=\"submit\" className=\"TodoEditor__button\">\n          to Save\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default TodoEditor;\n","const Filter = ({ value, onChange }) => {\n  return (\n    <label\n    // htmlFor=\"\"\n    >\n      фильтрт по имени\n      <input\n        // type=\"text\"/\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\nexport default Filter;\n","import React, { Component } from 'react';\nimport './Modal.scss';\nimport { createPortal } from 'react-dom';\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  //   constructor(props) {\n  //     super(props);\n  //     this.state = {};\n  //   }\n\n  componentDidMount() {\n    // console.log('modalComponentDidMount');\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    // console.log('modalComponentWillUnount');\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    console.log('current target', e.currentTarget);\n    console.log('target', e.target);\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal__content\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\nexport default Modal;\n","// ----BEGIN-----------\nimport { Component } from 'react';\n// import Counter from './Counter/Counter';\n// import ColorPicker from './ColorPicker';\n// import colorPickerOptions from '../Lesson-3-6/ColorPicker/colorPickerOptions/colorPickerOptions.json';\nimport TodoList from './TodoList';\nimport todosArray from './TodoList/todos.json';\nimport TodoEditor from './TodoList/TodoEditor/TodoEditor';\nimport shortid from 'shortid';\nimport Filter from './TodoList/Filter/Filter';\n// import Container from './Container'\n// import Form from './Form';\n// import s from './App.module.css'\nimport Modal from './Modal';\n\nclass App extends Component {\n  //| --------------CONSTRUCTOR------------------\n  state = {\n    todos: todosArray,\n    // todos: [],\n    inputValue: '',\n    filter: '',\n    showModal: false,\n  };\n\n  //| --------------METODS------------------\n\n  componentDidMount() {\n    const parsedTodos = JSON.parse(localStorage.getItem('todos'));\n    if (parsedTodos) {\n      this.setState({ todos: parsedTodos });\n    }\n  }\n\n  componentDidUpdate(prevState, prevProps) {\n    //❌ this.setState() - нельзя ставить просто так т.к.компонент зацикливается(будет ависание броузера и переполнение)\n    //✅ this.setState() - вызывается только в результате проверки каког-то условия (например при http запросах)\n    if (prevState !== this.state) {\n      localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    }\n  }\n\n  // // .form metods-complect:\n  // onSubmitHandler = data => {\n  //   console.log(data);\n  // };\n\n  // TODO metods-complect:\n  handleInputChange = event => {\n    console.log(event.currentTarget.value);\n\n    this.setState({ inputValue: event.currentTarget.value });\n    console.log(this.state.inputValue);\n  };\n\n  // toggleCompleted = todoId => {\n  //   console.log(todoId);\n  //   this.setState(prevState => ({\n  //     todos: prevState.todos.map(todo => {\n  //       if (todo.id === todoId) {\n  //         return {\n  //           ...todo,\n  //         completed:todo.completed,}\n  //       }\n  //       return todo\n  //     }),\n  //   }))\n  // }\n\n  //. аналогичная запись:\n  toggleCompleted = todoId => {\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { todos, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  getCompletedTodoCount = () => {\n    const { todos } = this.state;\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  //| --------------RENDER------------------\n\n  render() {\n    const {\n      todos,\n      filter,\n      showModal,\n      // inputValue\n    } = this.state;\n    // const visibleTodos = this.getVisibleTodos();\n    // const completedTodosCount = todos.filter(todo => todo.completed);\n    const completedTodosVar = this.getCompletedTodoCount();\n    // console.log(completedTodosCount.length);\n    // console.log(completedTodosVar);\n\n    return (\n      <>\n        {/* <Form onSubmit={this.onSubmitHandler} /> */}\n        {/* <Form onSubmit={this.onSubmitHandler} /> */}\n        {/* <Counter initialValue=\"\" /> */}\n        {/* <ColorPicker options={colorPickerOptions} /> */}\n\n        <div>\n          <p>Общее количество:{todos.length}</p>\n          <p>количество выполненных:{completedTodosVar}</p>\n          <TodoEditor onSubmit={this.addTodo} />\n          <Filter value={filter} onChange={this.changeFilter} />\n\n          <TodoList\n            todos={this.getVisibleTodos()}\n            // todos={visibleTodos}\n            onDeleteTodo={this.deleteTodo}\n            onToggleCompleted={this.toggleCompleted}\n          />\n        </div>\n        <div>\n          <button type=\"button\" onClick={this.toggleModal}>\n            Open modal window\n          </button>\n          {showModal && (\n            <Modal onClose={this.toggleModal}>\n              <h1>Hi this is ....... </h1>\n              <button type=\"button\" onClick={this.toggleModal}>\n                Close{' '}\n              </button>\n            </Modal>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './components/Lesson-3-6/App';\nimport './index.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}